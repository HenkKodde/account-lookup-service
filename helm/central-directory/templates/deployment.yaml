apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: {{ template "central-directory.fullname" . }}
  labels:
    app: {{ template "central-directory.name" . }}
    chart: {{ template "central-directory.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "central-directory.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "central-directory.name" . }}
        release: {{ .Release.Name }}
    spec:
      {{- if .Values.init.enabled }}
#      initContainers:
#        - name: {{ .Values.init.image.name }}
#          image: {{ .Values.init.image.repository }}:{{ .Values.init.image.tag }}
#          imagePullPolicy: {{ .Values.init.image.pullPolicy }}
#          env:
#          - name: CLEDG_DATABASE_URI
#            valueFrom:
#              secretKeyRef:
#                #name: {{ template "central-directory.name" . }}-secret-files
#                name: {{ (printf "%s-%s" "pi32" .Values.central_ledger.service_name) | quote }}
#                key: db.uri
#        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            periodSeconds: 1
            failureThreshold: 1
            httpGet:
              path: /
              port: http
          readinessProbe:
            initialDelaySeconds: 1
            periodSeconds: 1
            httpGet:
              path: /
              port: http
          envFrom:
            - configMapRef:
                name: {{ template "central-directory.name" . }}-config
          volumeMounts:
            - name: {{ template "central-directory.name" . }}-secret-files
              mountPath: {{ .Values.secretsMountPoint }}
          resources:
      volumes:
        - name: {{ template "central-directory.name" . }}-secret-files
          secret:
            secretName: {{ template "central-directory.name" . }}-secret-files
            items:
              - key: pathfindercert
                path: pathfindercert.pem
                mode: 511
              - key: clientkey
                path: clientkey.pem
                mode: 511
              - key: clientcert
                path: clientcert.pem
                mode: 511
      imagePullSecrets:
        - name: regcred
{{ toYaml .Values.resources | indent 12 }}
        - name: {{ .Values.imageCredentials.name }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: central-directory-autoscaler
  labels:
    app: {{ template "central-directory.name" . }}
    chart: {{ template "central-directory.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1beta1
    kind: Deployment
    name: {{ template "central-directory.fullname" . }}
  minReplicas: {{ .Values.minReplicas }}
  maxReplicas: {{ .Values.maxReplicas }}
  targetCPUUtilizationPercentage: {{ .Values.targetCPUUtilizationPercentage }}
